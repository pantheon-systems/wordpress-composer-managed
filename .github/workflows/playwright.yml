name: WordPress (Composer Managed) Playwright Tests
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

permissions:
    contents: write

jobs:
  playwright:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Generate lock files
        run: |
          npm install --package-lock-only

      - name: Set up cache for dependencies
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            ~/.composer/cache
            ./vendor
            ~/.npm
            ./node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles( '**/composer.json', '**/package-lock.json' ) }}
          restore-keys: ${{ runner.os }}-deps-

      - name: Install Composer dependencies
        if: steps.cache.outputs.cache-hit != true
        run: composer update --no-progress --prefer-dist --optimize-autoloader

      - name: Install NPM dependencies
        if: steps.cache.outputs.cache-hit != true
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Install SSH keys
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Get latest Terminus release
        uses: pantheon-systems/terminus-github-actions@v1
        with:
          pantheon-machine-token: ${{ secrets.TERMINUS_TOKEN }}
      - name: Validate Pantheon Host Key
        run: |
          echo "Host *.drush.in HostKeyAlgorithms +ssh-rsa" >> ~/.ssh/config
          echo "Host *.drush.in PubkeyAcceptedKeyTypes +ssh-rsa" >> ~/.ssh/config
          echo "StrictHostKeyChecking no" >> ~/.ssh/config
      - name: Log into Terminus
        run: |
          terminus auth:login --machine-token=${{ secrets.TERMINUS_TOKEN }}

      - name: Create Site
        run: |
          if terminus site:info wpcm-playwright-tests; then
            echo "Test site already exists, skipping site creation."
            # If the site exists already, we should switch it to git mode.
            terminus connection:set wpcm-playwright-tests.dev git -y
          else
            terminus site:create wpcm-playwright-tests 'WordPress (Composer Managed) Playwright Test Site' 'WordPress (Composer Managed)' --org=5ae1fa30-8cc4-4894-8ca9-d50628dcba17
          fi

      - name: Clone the site locally and copy PR updates
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git config --global user.email "cms-platform+sage-testing@pantheon.io"
          git config --global user.name "Pantheon WPCM Bot"
          PR_NUMBER=$(echo ${{ github.event.pull_request.number }})
          echo "Pull Request Number: ${PR_NUMBER}"
          COMMIT_MSG=$(gh pr view ${PR_NUMBER} --json commits --jq '.commits[-1] | "\(.messageHeadline) \(.messageBody)"')
          echo "Commit Message: ${COMMIT_MSG}"
          terminus local:clone wpcm-playwright-tests
          cd ~/pantheon-local-copies/wpcm-playwright-tests
          rsync -a --exclude='.git' ${{ github.workspace }}/ .
          git add -A
          git commit -m "Update to latest commit: ${COMMIT_MSG}" || true
          git push origin master || true

      - name: Status Check
        run: terminus wp wpcm-playwright-tests.dev -- cli info

      - name: Install WordPress
        run: |
          terminus wp wpcm-playwright-tests.dev -- core install --title='WPCM Playwright Tests' --admin_user=wpcm --admin_email=test@dev.null
          terminus wp wpcm-playwright-tests.dev -- option update permalink_structure '/%postname%/'
          terminus wp wpcm-playwright-tests.dev -- rewrite flush
          terminus wp wpcm-playwright-tests.dev -- cache flush

      - name: Install WP GraphQL
        run: |
          terminus workflow:wait wpcm-playwright-tests.dev
          terminus connection:set wpcm-playwright-tests.dev sftp
          terminus wp wpcm-playwright-tests.dev -- plugin install --activate wp-graphql

      - name: Run Playwright Tests
        run: npm run test .github/tests/wpcm.spec.ts

      - name: Delete Site
        if: success()
        run: terminus site:delete wpcm-playwright-tests -y
